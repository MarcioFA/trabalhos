#include <stdio.h>
#include <stdlib.h>
// Marcio Ferreira de Araujo
struct noArvovre{
  char Raiz;
  struct noArv* esq;
  struct noArv* dir;
};

typedef struct noArv no;

no* criar_no(char Raiz,no* esq, no* dir){
	no* n = malloc(sizeof(no ));
	n->Raiz = Raiz;
	n->esq = esq;
	n->dir = dir;
return n;
}

void emord(no* n){
	if (n !=NULL){
	emord(n ->esq);
	printf("%c", n->Raiz );
    emord(n->dir);
    }
}

void posord(no* n){
	if (n !=NULL){

	posord(n->esq);
	posord(n->dir);
	printf("%c", n->Raiz );
    }
}

void preord(no* n){
	if (n !=NULL){
	printf("%c", n -> Raiz );
	preord(n->esq);
	preord(n->dir);
    }
}
void imprimir(no* n){
	if (n !=NULL){
	printf("%c", n->Raiz );
	imprimir(n->esq);
	imprimir(n->dir);
    }
}


int Valor (no* n, char valor){

if(n == NULL){
   return 0;
   }else{

    return (n->Raiz == valor) || (Valor(n->esq, valor)) || (Valor(n->dir, valor));
   }

}

void main(){
	no* nono = criar_no('D',criar_no(('B'),criar_no('A',NULL,NULL),
	criar_no('C',NULL,NULL)), criar_no(('F'),criar_no('E',NULL,NULL),criar_no('G',NULL,NULL)));


    
    
    printf("\n Em Ordem: ");
	emord(nono);
	printf("\n Pos Ordem: ");
	posord(nono);
	printf("\n Pre Ordem: ");
	preord(nono);
	int result = Valor(nono,'A');
	printf("\n%d", result);
}
